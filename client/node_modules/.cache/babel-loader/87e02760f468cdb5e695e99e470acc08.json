{"ast":null,"code":"var _jsxFileName = \"/Users/cristian/Dev/GitHub/CristianNic/ArtWalks/client/src/components/Search/Search.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { neighbourhoods, API_URL } from '../Utils/Utils';\nimport redHeart from \"../../assets/icons/heart_red.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      art_works: [],\n      value: '',\n      mixed_search: '',\n      TitleArtistMedium: '',\n      userFavourites: [],\n      userFavouritesByRegistryId: []\n    };\n  }\n\n  componentDidMount() {\n    this.getArtWorks(); // this.setState({ userFavourites: this.props.userFavourites })\n\n    this.getUserFavourites();\n  }\n\n  getUserFavourites() {\n    // art_work_id is set by the MySQL database, while registry_id is from the City of Vancouver dataset (req. for matching artist info)\n    // userFavourites sets all details on favourite art_works and userFavouritesByRegistryId extracts the matching registry_id's\n    axios.get(`${API_URL}/favourites/${this.state.user_id}`).then(response => {\n      this.setState({\n        userFavourites: response.data,\n        userFavouritesByRegistryId: response.data.map(fave => fave.art_works.registry_id)\n      });\n    }).catch(error => {\n      console.log('error:', error.response.data);\n    });\n  }\n\n  getArtWorks() {\n    axios.get(`${API_URL}/art_works`).then(response => {\n      this.setState({\n        art_works: response.data.art_works\n      });\n    }).catch(function (error) {\n      console.log('error:', error.response.data);\n    });\n  }\n\n  render() {\n    // console.log('this.state.userFavouritesByRegistryId -->', this.userFavourites)\n    // console.log('this.state.userFavouritesByRegistryId -->', this.userFavouritesByRegistryId)\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search__divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search__select-div\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"search__select\",\n          onChange: this.props.selectNeighbourhood,\n          name: \"neighbourhood\",\n          id: \"neighbourhood-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"search__select-items\",\n            value: \"\",\n            children: \"Neighbourhood\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"search__select-items\",\n            value: \"Vancouver\",\n            children: \"All of Vancouver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), neighbourhoods.map((area, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"search__select-items\",\n            value: area,\n            children: area\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search__divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search__btn-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => this.props.selectFavourties(),\n          className: \"search__icon\",\n          src: redHeart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/cristian/Dev/GitHub/CristianNic/ArtWalks/client/src/components/Search/Search.jsx"],"names":["React","Component","axios","neighbourhoods","API_URL","Search","state","art_works","value","mixed_search","TitleArtistMedium","userFavourites","userFavouritesByRegistryId","componentDidMount","getArtWorks","getUserFavourites","get","user_id","then","response","setState","data","map","fave","registry_id","catch","error","console","log","render","props","selectNeighbourhood","area","i","selectFavourties","redHeart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport { neighbourhoods, API_URL } from '../Utils/Utils';\nimport redHeart from '../../assets/icons/heart_red.svg';\n\nexport default class Search extends Component {\n\n  state = {\n    art_works: [],\n    value: '',\n    mixed_search: '',\n    TitleArtistMedium: '',\n    userFavourites: [],\n    userFavouritesByRegistryId:[],\n  }\n\n  componentDidMount() {\n    this.getArtWorks()\n    // this.setState({ userFavourites: this.props.userFavourites })\n    this.getUserFavourites() \n  }\n\n  getUserFavourites() {\n    // art_work_id is set by the MySQL database, while registry_id is from the City of Vancouver dataset (req. for matching artist info)\n    // userFavourites sets all details on favourite art_works and userFavouritesByRegistryId extracts the matching registry_id's\n    axios\n      .get(`${API_URL}/favourites/${this.state.user_id}`)\n      .then((response) => {\n        this.setState({\n          userFavourites: response.data,\n          userFavouritesByRegistryId: response.data.map((fave) => fave.art_works.registry_id)\n        })\n      })\n      .catch((error) => {\n      console.log('error:', error.response.data);\n    })\n  }\n\n  getArtWorks() {\n    axios\n      .get(`${API_URL}/art_works`)\n      .then((response) => {\n        this.setState({\n          art_works: response.data.art_works,\n        })\n      })\n      .catch(function (error) {\n        console.log('error:', error.response.data);\n      })\n  }\n\n  render() {\n    \n    // console.log('this.state.userFavouritesByRegistryId -->', this.userFavourites)\n    // console.log('this.state.userFavouritesByRegistryId -->', this.userFavouritesByRegistryId)\n\n    return (\n      <section className=\"search\">\n        <div className=\"search__divider\"></div>\n        <div className=\"search__select-div\">\n          <select className=\"search__select\" onChange={this.props.selectNeighbourhood} name=\"neighbourhood\" id=\"neighbourhood-select\">\n            <option className=\"search__select-items\" value=\"\">Neighbourhood</option>\n              <option className=\"search__select-items\" value=\"Vancouver\">All of Vancouver</option>\n                {neighbourhoods.map((area, i) =>\n                  <option className=\"search__select-items\" value={area} key={i}>{area}</option>\n                )}\n          </select>\n        </div>\n        <div className=\"search__divider\"></div>\n        <div className=\"search__btn-container\">\n          <img onClick={() => this.props.selectFavourties()} className=\"search__icon\" src={redHeart}/>\n        </div>\n      </section>\n    )\n  }\n}\n        \n        \n        \n        \n        \n        \n  "]},"metadata":{},"sourceType":"module"}