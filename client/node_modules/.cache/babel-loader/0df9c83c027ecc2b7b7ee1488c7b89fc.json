{"ast":null,"code":"var _jsxFileName = \"/Users/cristian/Dev/GitHub/CristianNic/ArtWalks/client/src/pages/Gallery.jsx\";\nimport { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport LazyLoad from 'react-lazy-load'; //import './Gallery.scss'\n\nimport BottomNav from '../components/BottomNav/BottomNav';\nimport Search from '../components/Search/Search'; //import heartWhite from '../assets/icons/heart_white.svg';\n//import whiteHeart3 from '../assets/icons/heart-white-3px.svg';\n//import whiteHeart25 from '../assets/icons/heart-white-2.5px.svg';\n//import whiteHeart15 from '../assets/icons/heart-white-1.5px.svg';\n\nimport redHeart from \"../assets/icons/heart_red.svg\"; // import whiteHeart2 from '../assets/icons/heart-white-2px.svg';\n\nimport lightGray1Heart2 from \"../assets/icons/heart-light-gray-1-2px.svg\";\nimport lightGray1Heart2Filled from \"../assets/icons/heart-light-gray-1-2px-filled.svg\";\nimport iconMap from \"../assets/icons-feather-1.5px/map.svg\";\nimport { API_URL } from '../components/Utils/Utils';\nimport axios from \"axios\";\nimport data from '../data_temp/art_work_final_geom.json';\nimport artWorksData from '../data_temp/art_work'; // const apiUrl = 'http://localhost:8090/art_works'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Gallery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user_id: 2,\n      art_works: [],\n      artWorksData: artWorksData,\n      userFavourites: [],\n      userFavouritesByRegistryId: [],\n      display: false,\n      expand: 0,\n      liked: false,\n      mapLink: 0 // art[0].registry_id\n      // current_art_work: this.state.registry_id,\n\n    };\n\n    this.getUserId = () => {\n      const user_id = parseInt(localStorage.getItem('user_id', this.state.user_id));\n      this.setState({\n        user_id: user_id\n      });\n    };\n\n    this.reduceArrayIntoPairs = artWorksData => {\n      const rows = artWorksData.reduce(function (rows, key, index) {\n        return (index % 2 === 0 ? rows.push([key]) : rows[rows.length - 1].push(key)) && rows;\n      }, []); //console.log(rows);\n\n      return rows; // <--- map rows\n    };\n\n    this.expandArtWorkDetails = (e, data) => {\n      e.currentTarget.style.boxshadow = \"none\";\n      this.setState(state => {\n        return {\n          display: !state.display,\n          //expand: 7, // this.props.id,\n          expand: data\n        };\n      }); // console.log('Display --> ', this.state.display)\n      // console.log('Expand --> ', this.state.expand)\n      // console.log('Expand --> ', data)\n    };\n\n    this.removeFromFavourites = (e, data) => {\n      this.state.userFavourites.forEach(function (item, index) {\n        if (item.art_works.registry_id === data) {\n          localStorage.setItem('art_work_id', item.art_work_id);\n        }\n      });\n      const artWorkId = parseInt(localStorage.getItem('art_work_id'));\n      axios.delete(`${API_URL}/favourites/${this.state.user_id}/remove/${artWorkId}`).then(response => {\n        this.setState(state => {\n          return {\n            display: !state.display\n          };\n        });\n      }).catch(error => {\n        console.log('error:', error.response.data);\n      });\n      this.forceUpdate();\n      this.setState(state => {\n        return {\n          display: !state.display\n        };\n      });\n      window.location.reload();\n      this.forceUpdate();\n      localStorage.removeItem('art_work_id');\n      this.forceUpdate();\n    };\n\n    this.addToFavourites = (e, data) => {\n      // console.log('Liked state -->', this.state.liked)\n      // console.log('Add to Favourites --> ', data)\n      // console.log(e)\n      this.setState(state => {\n        return {\n          display: !state.display\n        };\n      });\n      this.state.art_works.forEach(function (item, index) {\n        if (item.registry_id === data) {\n          const position = index + 1;\n          localStorage.setItem('art_work_id_for_user_post', position);\n        }\n      });\n      const art_work_id_for_user_post = parseInt(localStorage.getItem('art_work_id_for_user_post')); // this.setState(state => {\n      //     return {display: !state.display}\n      // })\n\n      console.log(`${API_URL}/favourites/${this.state.user_id}/${art_work_id_for_user_post}`);\n      axios.post(`${API_URL}/favourites/${this.state.user_id}/${art_work_id_for_user_post}`).then(response => {// this.forceUpdate()\n        // this.setState(state => {\n        //   return {display: !state.display}\n        // })\n      }).catch(error => {\n        console.log('error:', error.response.data);\n      });\n      window.location.reload(); // this.forceUpdate()\n\n      this.setState(state => {\n        return {\n          display: !state.display\n        };\n      }); //  window.location.reload() \n      // this.forceUpdate()\n      // localStorage.removeItem('art_work_id_for_user_post');\n      // this.forceUpdate()\n\n      localStorage.removeItem('art_work_id_for_user_post');\n    };\n\n    this.placeArtWorkOnMap = (e, data) => {\n      console.log('Clicked placeArtWorkOnMap -->', data); // artWork registry_id\n\n      this.setState(state => {\n        return {\n          mapLink: state.data\n        };\n      });\n      localStorage.setItem('currently viewing', data);\n    };\n\n    this.selectNeighbourhood = location => {\n      // passed on Search bar as a prop\n      console.log('Search --> location.target.value --> ', location.target.value); // name of neighbourhood\n      // console.log('Search --> this.state.art_works --> ', this.state.art_works) // name of neighbourhood\n\n      console.log('Select Neighbourhood - data --> ', data); // name of neighbourhood\n      // if it's not Vancouver then do this: \n\n      if ('Vancouver' === location.target.value) {\n        // this.setState({ art_works: this.state.artWorks }) // do nothing \n        this.setState({\n          artWorksData: data\n        }); // do nothing\n      } else {\n        // if it's anything else, then filter for that \n        // const data = this.state.art_works  \n        const filteredData = data.filter(area => area.neighbourhood === location.target.value);\n        this.setState({\n          artWorksData: filteredData\n        });\n        console.log('Select Neighbourhood - filteredData --> ', filteredData);\n      }\n\n      this.forceUpdate();\n    };\n  }\n\n  // handleButtonClick = () => {\n  //   this.setState(state => {\n  //     return {\n  //       display: !state.display,\n  //       expand: 7, // this.props.id,\n  //     };\n  //   });\n  //   console.log('can I add more features?', this.state.display)\n  // };\n  // handleChange = (event) => {\n  // this.setState({\n  //   [event.target.name]: event.target.value,\n  // });\n  componentDidMount() {\n    this.getUserId();\n    this.getArtWorks(); // this.getArtWorksData();\n\n    this.getUserFavourites();\n    this.reduceArrayIntoPairs(this.state.art_works);\n  }\n\n  getArtWorks() {\n    axios.get(`${API_URL}/art_works`).then(response => {\n      this.setState({\n        art_works: response.data.art_works\n      });\n    }).catch(error => {\n      console.log('error:', error.response.data);\n    });\n  } // getArtWorksData() {\n  //   this.setState({ArtWorksData: data.ArtWorksData })\n  // }\n\n\n  getUserFavourites() {\n    axios.get(`${API_URL}/favourites/${this.state.user_id}`).then(response => {\n      this.setState({\n        userFavourites: response.data,\n        userFavouritesByRegistryId: response.data.map(fave => fave.art_works.registry_id)\n      });\n      console.log('USER FAVOURITES -->', this.state.userFavourites); // const faves = this.state.userFavourites;\n      // console.log('USER Favourites -- in RENDER ---> ', faves)\n      // const userArtWorkIdMaped = faves.map((fave => fave.art_work_id)) // User's Favourites have this ID\n      // console.log('userArtWorkIdMaped ---> ', userArtWorkIdMaped)\n      // console.log('Does this include 158?-->', userArtWorkIdMaped.includes(158))\n      // const userRegistryId = faves.map((fave) => fave.art_works.registry_id);\n      // console.log(\"userRegistryId ---> \", userRegistryId);\n    }).catch(error => {\n      console.log('error:', error.response.data);\n    });\n  }\n\n  render() {\n    // Previous Logs \n    // console.log('from API -- this.state.artworks -->', this.state.art_works)\n    // console.log('ArtWorks Temp Data -->', artWorksData);\n    // console.log('ArtWorks Imported Obj -- grouped -->', this.reduceArrayIntoPairs(artWorksData));\n    // const rows = this.reduceArrayIntoPairs(artWorksData)\n    // console.log('Access Rows -->', rows[0][0])\n    // console.log('Rows ==> ', rows)\n    // console.log(`Hi, I'm the gallery for user --> `, this.state.user_id)\n    // { favourites.inculudes(i) ? ( <div>True</div>) : ( <div>False</div> ) }\n    // const array1 = [1, 2, 3];\n    // console.log('Array 1 Test --> ', array1.includes(2));\n    // const faves = this.state.userFavourites;\n    // console.log('USER Favourites -- in RENDER ---> ', faves)\n    // const userArtWorkIdMaped = faves.map((fave => fave.art_work_id)) // User's Favourites have this ID\n    // console.log('userArtWorkIdMaped ---> ', userArtWorkIdMaped)\n    // console.log('Does this include 158?-->', userArtWorkIdMaped.includes(158))\n    // const userRegistryId = faves.map((fave) => fave.art_works.registry_id);\n    // console.log(\"userRegistryId ---> \", userRegistryId);\n    console.log(\" ****** this.state.userFavouritesByRegistryId ---> \", this.state.userFavouritesByRegistryId);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        selectNeighbourhood: this.selectNeighbourhood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery\",\n        children: [this.reduceArrayIntoPairs(this.state.artWorksData).map(art => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery__pairs-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gallery__imgs-buttons-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery__img-button\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gallery__img-container\",\n                children: [/*#__PURE__*/_jsxDEV(LazyLoad, {\n                  className: \"gallery__img-lazyload\",\n                  offsetVertical: 700,\n                  overflow: true,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"gallery__img-img\",\n                    onClick: e => {\n                      this.expandArtWorkDetails(e, art[0].registry_id);\n                    },\n                    src: art[0].photo_url_jpg,\n                    alt: art[0].title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 21\n                }, this), this.state.userFavouritesByRegistryId.includes(art[0].registry_id) === true ?\n                /*#__PURE__*/\n                // <img className=\"gallery__like-icon\" src={redHeart} alt=\"red heart icon, clicking removes from favourites\"\n                //   onClick={(e) => { this.removeFromFavourites(e, art[0].registry_id) }}></img>\n                _jsxDEV(\"img\", {\n                  className: \"gallery__like-icon\",\n                  src: redHeart,\n                  alt: \"red heart icon, clicking removes from favourites\",\n                  onClick: e => {\n                    this.removeFromFavourites(e, art[0].registry_id);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"gallery__like-icon white-filter\",\n                  src: lightGray1Heart2,\n                  alt: \"white heart icon, clicking adds to favourites\",\n                  onClick: e => {\n                    this.addToFavourites(e, art[0].registry_id);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gallery__img-button\",\n              onClick: e => {\n                this.expandArtWorkDetails(e, art[1].registry_id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gallery__img-container\",\n                children: [/*#__PURE__*/_jsxDEV(LazyLoad, {\n                  className: \"gallery__img-lazyload\",\n                  offsetVertical: 700,\n                  overflow: true,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"gallery__img-img\",\n                    src: art[1].photo_url_jpg,\n                    alt: art[1].title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 21\n                }, this), this.state.userFavouritesByRegistryId.includes(art[1].registry_id) === true ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"gallery__like-icon\",\n                  onClick: e => {\n                    this.expandArtWorkDetails(e, art[1].registry_id);\n                  },\n                  src: redHeart,\n                  alt: \"red heart icon\",\n                  onClick: e => {\n                    this.removeFromFavourites(e, art[1].registry_id);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"gallery__like-icon white-filter\",\n                  src: lightGray1Heart2Filled,\n                  alt: \"white heart icon, clicking adds to favourites\",\n                  onClick: e => {\n                    this.addToFavourites(e, art[1].registry_id);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this), this.state.display && this.state.expand === art[0].registry_id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expander\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"arrow-down\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"ul\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: art[0].title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: art[0].artists_names\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/map/${art[0].registry_id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      this.placeArtWorkOnMap(e, art[0].registry_id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"white-filter\",\n                      src: iconMap,\n                      alt: \"map icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 637,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: art[0].neighbourhood\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: art[0].type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: art[0].artist_statement\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Statement Statement Statement Statement Statement Statement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 17\n          }, this), this.state.display && this.state.expand === art[1].registry_id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expander\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"arrow-down\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: art[1].title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: art[1].artists_names\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/map/${art[0].registry_id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => {\n                      this.placeArtWorkOnMap(e, art[1].registry_id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"white-filter\",\n                      src: iconMap,\n                      alt: \"map icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 656,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: art[1].neighbourhood\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: art[1].type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: art[1].artist_statement\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Statement Statement Statement Statement Statement Statement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 17\n          }, this)]\n        }, art[0].registry_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(BottomNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/cristian/Dev/GitHub/CristianNic/ArtWalks/client/src/pages/Gallery.jsx"],"names":["Component","Link","LazyLoad","BottomNav","Search","API_URL","axios","data","artWorksData","Gallery","state","user_id","art_works","userFavourites","userFavouritesByRegistryId","display","expand","liked","mapLink","getUserId","parseInt","localStorage","getItem","setState","reduceArrayIntoPairs","rows","reduce","key","index","push","length","expandArtWorkDetails","e","currentTarget","style","boxshadow","removeFromFavourites","forEach","item","registry_id","setItem","art_work_id","artWorkId","delete","then","response","catch","error","console","log","forceUpdate","window","location","reload","removeItem","addToFavourites","position","art_work_id_for_user_post","post","placeArtWorkOnMap","selectNeighbourhood","target","value","filteredData","filter","area","neighbourhood","componentDidMount","getArtWorks","getUserFavourites","get","map","fave","render","art","photo_url_jpg","title","includes","redHeart","lightGray1Heart2","lightGray1Heart2Filled","artists_names","iconMap","type","artist_statement"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { Link } from 'react-router-dom'\nimport LazyLoad from 'react-lazy-load';\n//import './Gallery.scss'\nimport BottomNav from '../components/BottomNav/BottomNav';\nimport Search from '../components/Search/Search';\n\n//import heartWhite from '../assets/icons/heart_white.svg';\n//import whiteHeart3 from '../assets/icons/heart-white-3px.svg';\n//import whiteHeart25 from '../assets/icons/heart-white-2.5px.svg';\n//import whiteHeart15 from '../assets/icons/heart-white-1.5px.svg';\nimport redHeart from '../assets/icons/heart_red.svg';\n// import whiteHeart2 from '../assets/icons/heart-white-2px.svg';\nimport lightGray1Heart2 from '../assets/icons/heart-light-gray-1-2px.svg';\nimport lightGray1Heart2Filled from '../assets/icons/heart-light-gray-1-2px-filled.svg';\nimport iconMap from '../assets/icons-feather-1.5px/map.svg';\n\nimport { API_URL } from '../components/Utils/Utils';\nimport axios from \"axios\";\n\nimport data from '../data_temp/art_work_final_geom.json';\nimport artWorksData from '../data_temp/art_work'\n// const apiUrl = 'http://localhost:8090/art_works'\n\nclass Gallery extends Component {\n\n  // state = {\n  //   art_works: [],\n  // }\n  // componentDidMount() {\n  //   this.getArtWorks(); \n  // }\n\n  // getArtWorks() {\n  //   axios\n  //     .get(apiUrl)\n  //     .then((response) => {\n  //       this.setState({\n  //         art_works: response.data.art_works,\n  //       })\n  //     })\n  //     .catch(function(error) {\n  //     })\n  // }\n  // const [showResults, setShowResults] = useState(false);\n  // const onClick = () => setShowResults(true)\n\n  state = {\n    user_id: 2,\n    art_works: [],\n    artWorksData: artWorksData,\n    userFavourites: [],\n    userFavouritesByRegistryId: [],\n    display: false,\n    expand: 0,\n    liked: false,\n    mapLink: 0, // art[0].registry_id\n    // current_art_work: this.state.registry_id,\n  }\n\n  // handleButtonClick = () => {\n  //   this.setState(state => {\n  //     return {\n  //       display: !state.display,\n  //       expand: 7, // this.props.id,\n  //     };\n  //   });\n  //   console.log('can I add more features?', this.state.display)\n  // };\n\n  // handleChange = (event) => {\n  // this.setState({\n  //   [event.target.name]: event.target.value,\n  // });\n  \n  componentDidMount() {\n    this.getUserId();\n    this.getArtWorks();\n    // this.getArtWorksData();\n    this.getUserFavourites();\n    this.reduceArrayIntoPairs(this.state.art_works);\n  }\n\n  getUserId = () => {\n    const user_id = parseInt(localStorage.getItem('user_id', this.state.user_id));\n    this.setState({ user_id: user_id })\n  }\n\n  getArtWorks() {\n    axios\n      .get(`${API_URL}/art_works`)\n      .then((response) => {\n        this.setState({art_works: response.data.art_works })\n      })\n      .catch((error) => {console.log('error:', error.response.data)})\n  }\n\n  // getArtWorksData() {\n  //   this.setState({ArtWorksData: data.ArtWorksData })\n  // }\n\n  getUserFavourites() {\n    axios\n      .get(`${API_URL}/favourites/${this.state.user_id}`)\n      .then((response) => {\n        this.setState({\n          userFavourites: response.data,\n          userFavouritesByRegistryId: response.data.map((fave) => fave.art_works.registry_id)\n        })\n        console.log('USER FAVOURITES -->', this.state.userFavourites)\n        // const faves = this.state.userFavourites;\n        // console.log('USER Favourites -- in RENDER ---> ', faves)\n\n        // const userArtWorkIdMaped = faves.map((fave => fave.art_work_id)) // User's Favourites have this ID\n        // console.log('userArtWorkIdMaped ---> ', userArtWorkIdMaped)\n\n        // console.log('Does this include 158?-->', userArtWorkIdMaped.includes(158))\n\n        // const userRegistryId = faves.map((fave) => fave.art_works.registry_id);\n        // console.log(\"userRegistryId ---> \", userRegistryId);\n      })\n      .catch((error) => {\n      console.log('error:', error.response.data);\n    })\n  }\n\n\n  reduceArrayIntoPairs = (artWorksData) => {\n    const rows = artWorksData.reduce(function (rows, key, index) {\n      return (\n        (index % 2 === 0 ? rows.push([key]) : rows[rows.length - 1].push(key)) &&\n        rows\n      );\n    }, []);\n    //console.log(rows);\n    return rows; // <--- map rows\n  } \n\n  expandArtWorkDetails = (e, data) => {\n    e.currentTarget.style.boxshadow = \"none\";\n    this.setState(state => {\n      return {\n        display: !state.display,\n        //expand: 7, // this.props.id,\n        expand: data,\n      };\n    });\n    // console.log('Display --> ', this.state.display)\n    // console.log('Expand --> ', this.state.expand)\n    // console.log('Expand --> ', data)\n  };\n  \n  // addToFavourites = (e, data) => {\n  //   console.log('Liked state -->', this.state.liked)\n  //   console.log('Add to Favourites --> ', data)\n  //   console.log(e)\n  //   this.setState(state => {\n  //     return {\n  //       display: !state.display,\n  //     }\n  //   })\n  // }\n\n  // // Quickly undos the expand function when clicked. This way both buttons are activate. \n  // // Click liked and the item id is registered and closes the expand that was opened.\n  // removeFromFavourites = (e, data) => {\n  //   console.log('Liked State -->', this.state.liked)\n  //   console.log('Remove from Favourties --> ', data)\n  //   console.log(e)\n  //   this.setState(state => {\n  //     return {\n  //       display: !state.display,\n  //     }\n  //   })\n  //   // this.setState({ removeFromFavouritesClicked: !this.removeFromFavouritesClicked })\n  // }\n\n  // -------------------\n  // removeFromFavourites = (e, data) => {\n  //   console.log('Liked State -->', this.state.liked)\n  //   console.log('Remove from Favourties (clicked on red heart) --> ', data)\n  //   console.log(e)\n    \n  //   // grab art_work_id, not registry_id --> // can only retreive registry_id\n  //   // search all art_works for matching registry_id\n    \n  //   // search/filter userFavourites for art_work_id given a registry_id \n\n  //   const find = this.state.userFavourites.includes()\n\n  //  //  userFavouritesByRegistryId: response.data.map((fave) => fave.art_works.registry_id)\n\n\n     \n  //   console.log('******   Find Test  *****  --> ', this.state.userFavourites)\n  //   console.log('******   userFavouritesByRegistryId  *****  --> ', this.state.userFavouritesByRegistryId)\n  //   console.log('******   Find Test  *****  --> ', find)\n  //   // send art_work_id \n\n  //   // const newArray = this.state.userFavourites.filter(function (el) {\n  //   //   return el.art_works.registry_id === 836;\n  //   // });\n    \n  //   // if (art_works.registry_id === 836)\n    \n  //   // const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\n  //   // const result = words.filter(word => word.length > 6);\n\n  //   const test = this.state.userFavourites\n\n  //   // works \n  //   // const filtered = test.filter((thing) => thing.art_work_id === 150)\n  //   // console.log('ADQD@DQEDDQWDQW --->>> ', filtered)\n\n  //   // const filtered = test.filter((thing) => thing.art_works.filter((thing2) => thing2.registry_id === 826))\n\n  //   // console.log('ADQD@DQEDDQWDQW --->>> ', filtered)\n\n  //   // const found = test.find(x => x.art_work_id === 150)\n\n  //   // console.log('ADQD@DQEDDQWDQW --->>> ', found)\n\n  //   const found2 = test.find(element => element.id === 2)\n    \n  //   console.log('ADQD@DQEDDQWDQW --->>> ', found2)\n  \n  \n  //   const hello = {\n  //     hello: 'world',\n  //     foo: 'bar'\n  //   };\n\n  //   const qaz = {\n  //     hello: 'stevie',\n  //     foo: 'baz'\n  //   }\n\n  //   const myArray3 = [];\n  //     myArray3.push(hello, qaz);\n    \n  //   console.log('ADQD@DQEDDQWDQW --->>> ', myArray3)\n\n  //   const pos = myArray3.map(function (e) { return e.hello; }).indexOf('stevie');\n    \n  //   console.log('ADQD@DQEDDQWDQW --->>> ', pos)\n\n  //   // const test = this.state.userFavourites.map(function (e) { return e.art_works.registry_id; }).indexOf(318); \n\n  //   console.log('TEST--->>> ', test)\n\n  //   // now retreive the object with this index \n\n  //   // const alligatorFacts = [\"thick scales\", 80, \"4 foot tail\", \"rounded snout\", 80];\n  //   // alligatorFacts.find((el, idx) => typeof el === \"string\" && idx === 2);\n\n  //   const found = this.state.userFavourites.find(el => el === 0);\n\n  //   console.log('ADQD@DQEDDQWDQW --->>> ', found)\n\n  //   // userfavs.filter((item) => registry_id(from click) === item.art_works.registry_id}\n  //   // const ok = this.state.userFavourites.filter((item) => { item.id === wanted.id })\n      \n  //   // console.log('ADQD@DQEDDQWDQW --->>> ', ok)\n\n  //   const userfavs = this.state.userFavourites\n    \n  //   const test7 = userfavs.filter((item) => { return 816 === item.art_works.registry_id })\n    \n  //   const test8 = userfavs.filter((item) => { return 150 === item.art_works_id })\n    \n  //   console.log('ADQD@DQEDDQWDQW --->>> ', test8)\n\n  //   console.log('UserFaves LATEST ONE --->>> ', userfavs)\n\n  //   // for each item in this array \n  //   // check if the object has inside it a value of art_works.registry_id === registry_id \n  //   // if it does then return the object \n  //   // from the object extract the obj.art_work_id number \n\n  //   // userfavs.forEach(function (item, index) {\n\n  //   //   if (item.art_works.registry_id === 826) {\n  //   //     console.log('Happy =)', item)\n  //   //   } else {\n  //   //     console.log('Sad =(')\n  //   //   }\n  //   //  //  console.log(item.art_works, item.art_works.registry_id, index)\n      \n  //   // });\n  //   this.state.userFavourites.forEach(function (item, index) {\n  //     if (item.art_works.registry_id === data) {\n  //       console.log('found art_work obj: ', item)\n  //       console.log('Pass to axios.delete() --> art_work_id: ', item.art_work_id)\n  //       const art_work_id = item.art_work_id\n  //     }      \n  //   });\n\n\n\n  //   // axios\n  //   //   .delete(`${API_URL}/favourites/${this.state.user_id}/remove/${data}`)\n  //   //   .then((response) => {\n  //   //   })\n  //   //   .catch((error) => {\n  //   //   console.log('error:', error.response.data);\n  //   // })\n\n  //   this.setState(state => {\n  //     return {\n  //       display: !state.display,\n  //     }\n  //   })\n  //   // this.setState({ removeFromFavouritesClicked: !this.removeFromFavouritesClicked })\n  // }\n  // -------------------\n\n\n\n  // removeFromFavourites = (e, data) => {\n  //   console.log('Liked State -->', this.state.liked)\n  //   console.log('Remove from Favourties (clicked on red heart) --> ', data)\n  //   console.log(e)\n\n  //   this.state.userFavourites.forEach(function (item, index) {\n  //     // const art_work_id = 0\n  //     if (item.art_works.registry_id === data) {\n  //       // console.log('found art_work obj: ', item)\n  //       console.log('Pass to axios.delete() --> art_work_id: ', item.art_work_id)\n  //       // const art_work_id = item.art_work_id\n\n  //       console.log('URL', `${API_URL}/favourites/remove/`)\n\n  //       axios\n  //         .delete(`${API_URL}/favourites/${this.state.user_id}/remove/${item.art_work_id}`)\n  //         .then((response) => { })\n  //         .catch((error) => { console.log('error:', error.response.data) })\n\n  //       this.setState(state => {\n  //         return {\n  //           display: !state.display,\n  //         }\n  //       })\n      \n\n  //       // return art_work_id\n  //     }\n  //     // return art_work_id\n  //     // console.log('OUTSIDE of IT', art_work_id)\n\n  //   });\n\n  //  // console.log('OUTSIDE of IT', cool)\n\n  //   // axios\n  //   //   .delete(`${API_URL}/favourites/${this.state.user_id}/remove/${data}`)\n  //   //   .then((response) => {\n  //   //   })\n  //   //   .catch((error) => {\n  //   //   console.log('error:', error.response.data);\n  //   // })\n  //   // this.setState(state => {\n  //   //   return {\n  //   //     display: !state.display,\n  //   //   }\n  //   // })\n  //   // this.setState({ removeFromFavouritesClicked: !this.removeFromFavouritesClicked })\n  // }\n\n\n  // removeFromFavourites = (e, data) => {\n  //   console.log('Liked State -->', this.state.liked)\n  //   console.log('Remove from Favourties (clicked on red heart) --> ', data)\n\n  //   this.state.userFavourites.forEach(function (item, index) {\n  //     if (item.art_works.registry_id === data) {\n  //       // console.log('found art_work obj: ', item)\n  //       // console.log('Pass to axios.delete() --> art_work_id: ', item.art_work_id)\n  //       // return item.art_work_id\n  //       localStorage.setItem('art_work_id', item.art_work_id)\n  //     }\n  //   })\n\n  //   const artWorkId = parseInt(localStorage.getItem('art_work_id'))\n    \n  //   axios\n  //     .delete(`${API_URL}/favourites/${this.state.user_id}/remove/${artWorkId}`)\n  //     .then((response) => {\n  //       this.setState(state => {\n  //         return {display: !state.display}\n  //       })\n  //     })\n  //     .catch((error) => {\n  //     console.log('error:', error.response.data);\n  //     })\n    \n  //   //  window.location.reload()\n  //   this.forceUpdate()\n  //     this.setState(state => {\n  //       return {display: !state.display}\n  //     })\n      \n  //  //  this.forceUpdate()   // -- try his one \n  //   window.location.reload() \n  //   this.forceUpdate()\n    \n  // }\n\n\n  removeFromFavourites = (e, data) => {\n    this.state.userFavourites.forEach(function (item, index) {\n      if (item.art_works.registry_id === data) {\n        localStorage.setItem('art_work_id', item.art_work_id)\n      }\n    })\n\n    const artWorkId = parseInt(localStorage.getItem('art_work_id'))\n    \n    axios\n      .delete(`${API_URL}/favourites/${this.state.user_id}/remove/${artWorkId}`)\n      .then((response) => {\n        this.setState(state => {\n          return {display: !state.display}\n        })\n      })\n      .catch((error) => {\n      console.log('error:', error.response.data);\n      })\n\n    this.forceUpdate()\n  \n    this.setState(state => {\n      return {display: !state.display}\n    })\n\n     window.location.reload() \n    this.forceUpdate()\n\n    localStorage.removeItem('art_work_id');\n    this.forceUpdate()\n  }\n\n\n\n  addToFavourites = (e, data) => {\n    // console.log('Liked state -->', this.state.liked)\n    // console.log('Add to Favourites --> ', data)\n    // console.log(e)\n\n    this.setState(state => {\n        return {display: !state.display}\n    })\n\n    this.state.art_works.forEach(function (item, index) {\n      if (item.registry_id === data) {\n        const position = index + 1 \n        localStorage.setItem('art_work_id_for_user_post', position)\n      }\n    })\n\n    const art_work_id_for_user_post = parseInt(localStorage.getItem('art_work_id_for_user_post'))\n\n\n    // this.setState(state => {\n    //     return {display: !state.display}\n    // })\n    \n    console.log(`${API_URL}/favourites/${this.state.user_id}/${art_work_id_for_user_post}`)\n\n    axios\n      .post(`${API_URL}/favourites/${this.state.user_id}/${art_work_id_for_user_post}`)\n      .then((response) => {\n        // this.forceUpdate()\n        // this.setState(state => {\n        //   return {display: !state.display}\n        // })\n      })\n      .catch((error) => {\n      console.log('error:', error.response.data);\n      })\n    \n    window.location.reload() \n    // this.forceUpdate()\n  \n    this.setState(state => {\n      return {display: !state.display}\n    })\n\n    //  window.location.reload() \n    // this.forceUpdate()\n\n    // localStorage.removeItem('art_work_id_for_user_post');\n    // this.forceUpdate()\n    localStorage.removeItem('art_work_id_for_user_post');\n\n  }\n\n\n\n  placeArtWorkOnMap = (e, data) => {\n    console.log('Clicked placeArtWorkOnMap -->', data) // artWork registry_id\n    this.setState(state => {\n      return {\n        mapLink: state.data,\n      }\n    });\n    localStorage.setItem('currently viewing', data)\n  }\n\n  selectNeighbourhood = (location) => {\n    // passed on Search bar as a prop\n    console.log('Search --> location.target.value --> ', location.target.value) // name of neighbourhood\n    // console.log('Search --> this.state.art_works --> ', this.state.art_works) // name of neighbourhood\n    console.log('Select Neighbourhood - data --> ', data) // name of neighbourhood\n      \n    // if it's not Vancouver then do this: \n\n    if ('Vancouver' === location.target.value) {\n      // this.setState({ art_works: this.state.artWorks }) // do nothing \n      this.setState({ artWorksData: data })\n      // do nothing\n    } else {\n      // if it's anything else, then filter for that \n      // const data = this.state.art_works  \n      const filteredData = data.filter(area =>\n        area.neighbourhood === location.target.value);\n    \n      this.setState({ artWorksData: filteredData })\n\n      console.log('Select Neighbourhood - filteredData --> ', filteredData)\n    }\n    this.forceUpdate()\n  }\n  \n\n  render() {\n\n    // Previous Logs \n    // console.log('from API -- this.state.artworks -->', this.state.art_works)\n    // console.log('ArtWorks Temp Data -->', artWorksData);\n    // console.log('ArtWorks Imported Obj -- grouped -->', this.reduceArrayIntoPairs(artWorksData));\n    // const rows = this.reduceArrayIntoPairs(artWorksData)\n    // console.log('Access Rows -->', rows[0][0])\n    // console.log('Rows ==> ', rows)\n    // console.log(`Hi, I'm the gallery for user --> `, this.state.user_id)\n    \n\n    // { favourites.inculudes(i) ? ( <div>True</div>) : ( <div>False</div> ) }\n\n    // const array1 = [1, 2, 3];\n\n    // console.log('Array 1 Test --> ', array1.includes(2));\n\n    // const faves = this.state.userFavourites;\n    // console.log('USER Favourites -- in RENDER ---> ', faves)\n\n    // const userArtWorkIdMaped = faves.map((fave => fave.art_work_id)) // User's Favourites have this ID\n    // console.log('userArtWorkIdMaped ---> ', userArtWorkIdMaped)\n\n    // console.log('Does this include 158?-->', userArtWorkIdMaped.includes(158))\n\n    // const userRegistryId = faves.map((fave) => fave.art_works.registry_id);\n    // console.log(\"userRegistryId ---> \", userRegistryId);\n\n    console.log(\" ****** this.state.userFavouritesByRegistryId ---> \", this.state.userFavouritesByRegistryId);\n    \n    return (\n      <div>\n        {/* { favourites.inculudes(i) ? (<div>True</div>) : (<div>False</div>) } */}\n        \n        <Search\n          selectNeighbourhood={this.selectNeighbourhood}\n        />\n        <div className=\"gallery\">\n          {/* ------------ Map ------------*/}\n          {this.reduceArrayIntoPairs(this.state.artWorksData).map(art =>\n            <div className=\"gallery__pairs-wrapper\" key={art[0].registry_id}>\n              {/* {console.log('rows ---> ', rows)}\n              {console.log('ART ---> ', art)} */}\n              <div className=\"gallery__imgs-buttons-container\">\n                {/* <button className=\"gallery__img-button\" onClick={(e) => { this.expandArtWorkDetails(e, art[0].registry_id) }} > */}\n                {/* // Moved onClick from button to img */}\n                <button className=\"gallery__img-button\" >\n                  <div className=\"gallery__img-container\">\n                    <LazyLoad className=\"gallery__img-lazyload\" offsetVertical={700} overflow={true} >\n                      <img className=\"gallery__img-img\" onClick={(e) => { this.expandArtWorkDetails(e, art[0].registry_id) }} src={art[0].photo_url_jpg} alt={art[0].title}></img>\n                    </LazyLoad>\n                    {/* {this.state.liked === true ? (\n                      // <img className=\"gallery__like-icon\" src={redHeart} alt=\"red heart icon, clicking removes from favourites\"\n                      //   onClick={(e) => { this.removeFromFavourites(e, art[0].registry_id) }}></img>\n                      <img className=\"gallery__like-icon\" src={redHeart} alt=\"red heart icon, clicking removes from favourites\"\n                        onClick={(e) => { this.removeFromFavourites(e, art[0].registry_id) }}></img>\n                      ) : (\n                      <img className=\"gallery__like-icon white-filter\" src={lightGray1Heart2} alt=\"white heart icon, clicking adds to favourites\"\n                        onClick={(e) => { this.addToFavourites(e, art[0].registry_id)} }></img>\n                    )} */}\n                    \n                    {/* {userRegistryId.includes(art[0].registry_id) === true ? ( */}\n                    {this.state.userFavouritesByRegistryId.includes(art[0].registry_id) === true ? (\n\n\n                      // <img className=\"gallery__like-icon\" src={redHeart} alt=\"red heart icon, clicking removes from favourites\"\n                      //   onClick={(e) => { this.removeFromFavourites(e, art[0].registry_id) }}></img>\n                      <img className=\"gallery__like-icon\" src={redHeart} alt=\"red heart icon, clicking removes from favourites\"\n                        onClick={(e) => { this.removeFromFavourites(e, art[0].registry_id) }}></img>\n                      ) : (\n                      <img className=\"gallery__like-icon white-filter\" src={lightGray1Heart2} alt=\"white heart icon, clicking adds to favourites\"\n                        onClick={(e) => { this.addToFavourites(e, art[0].registry_id)} }></img>\n                    )}\n                  </div>\n                </button>\n                {/* </button> */}\n                <button className=\"gallery__img-button\" onClick={(e) => { this.expandArtWorkDetails(e, art[1].registry_id) }} >\n                {/* <button className=\"gallery__img-button\" onClick={(e) => { this.expandArtWorkDetails(e, art[1].registry_id) }} > */}\n                  <div className=\"gallery__img-container\">\n                    <LazyLoad className=\"gallery__img-lazyload\" offsetVertical={700} overflow={true} >\n                      <img className=\"gallery__img-img\" src={art[1].photo_url_jpg} alt={art[1].title}></img>\n                    </LazyLoad>    \n                    {/* {this.state.liked === true ? ( */}\n                    {this.state.userFavouritesByRegistryId.includes(art[1].registry_id) === true ? (\n                      <img className=\"gallery__like-icon\" onClick={(e) => { this.expandArtWorkDetails(e, art[1].registry_id) }} src={redHeart} alt=\"red heart icon\"\n                        onClick={(e) => { this.removeFromFavourites(e, art[1].registry_id) }}></img>\n                      ) : (\n                      <img className=\"gallery__like-icon white-filter\" src={lightGray1Heart2Filled} alt=\"white heart icon, clicking adds to favourites\"\n                        onClick={(e) => { this.addToFavourites(e, art[1].registry_id)} }></img>\n                    )}\n                  </div>\n                </button>\n              </div>\n              {this.state.display && this.state.expand === art[0].registry_id && (\n                <div className=\"expander\">\n                  <div className=\"arrow-down\">\n                    <ul className=\"ul\">\n                      <h1>{art[0].title}</h1>\n                      <h2>{art[0].artists_names}</h2>\n                      <Link to={`/map/${art[0].registry_id}`}>\n                        <button onClick={(e) => {this.placeArtWorkOnMap(e, art[0].registry_id)}}>\n                          <img className=\"white-filter\" src={iconMap} alt=\"map icon\"></img>\n                        </button>\n                      </Link>\n                      <h3>{art[0].neighbourhood}</h3>\n                      <h3>{art[0].type}</h3>\n                      <h4>{art[0].artist_statement}</h4>\n                      <p>Statement Statement Statement Statement Statement Statement</p>\n                    </ul>\n                  </div>\n                </div>\n              )}\n              {this.state.display && this.state.expand === art[1].registry_id && (\n                <div className=\"expander\">\n                  <div className=\"arrow-down\">\n                    <ul>\n                      <h1>{art[1].title}</h1>\n                      <h2>{art[1].artists_names}</h2>\n                      <Link to={`/map/${art[0].registry_id}`}>\n                        <button onClick={(e) => {this.placeArtWorkOnMap(e, art[1].registry_id)}}>\n                          <img className=\"white-filter\" src={iconMap} alt=\"map icon\"></img>\n                        </button>\n                      </Link>\n                      <h3>{art[1].neighbourhood}</h3>\n                      <h3>{art[1].type}</h3>\n                      <h4>{art[1].artist_statement}</h4>\n                      <p>Statement Statement Statement Statement Statement Statement</p>\n                    </ul>\n                  </div>\n                </div>)}\n            </div>\n          )} \n          <BottomNav />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}