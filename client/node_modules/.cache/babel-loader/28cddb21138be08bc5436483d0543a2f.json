{"ast":null,"code":"var _jsxFileName = \"/Users/cristian/Dev/GitHub/CristianNic/ArtWalks/client/src/pages/Saved.jsx\";\n// import React from 'react';\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport LazyLoad from 'react-lazy-load';\nimport axios from 'axios';\nimport './Saved.scss';\nimport BottomNav from '../components/BottomNav/BottomNav';\nimport Search from '../components/Search/Search'; // import ArtWorks from '../components/ArtWorks/ArtWorks'; \n// import SavedItems from '../components/SavedItems/SavedItems';\n\nimport { API_URL } from '../components/Utils/Utils';\nimport heartRed from \"../assets/icons/heart_red.svg\";\nimport lightGray1Heart2Filled from \"../assets/icons/heart-light-gray-1-2px-filled.svg\"; // import heartWhite from '../assets/icons/heart_white.svg';\n\nimport iconMap from \"../assets/icons-feather-1.5px/map.svg\"; // import redHeart from '../assets/icons/heart_red.svg';\n// import whiteHeart2 from '../assets/icons/heart-white-2px.svg';\n// import lightGray1Heart2 from '../assets/icons/heart-light-gray-1-2px.svg';\n// import iconDetails from '../assets/icons-feather-1.5px/archive.svg'\n\nimport iconMaximize from \"../assets/icons/maximize-2-1.5px.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Saved extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user_id: parseInt(localStorage.getItem('user_id')),\n      userFavourites: [],\n      mapLink: 0\n    };\n\n    this.removeFromFavourites = (e, data) => {\n      axios.delete(`${API_URL}/favourites/${this.state.user_id}/remove/${data}`).then(response => {}).catch(error => {\n        console.log('error:', error.response.data);\n      });\n      window.location.reload();\n    };\n\n    this.addToFavourites = (e, data) => {\n      this.state.userFavourites.forEach(function (item, index) {\n        if (item.registry_id === data) {\n          const position = index + 1;\n          localStorage.setItem('art_work_id_for_user_post', position);\n        }\n      });\n      const art_work_id_for_user_post = parseInt(localStorage.getItem('art_work_id_for_user_post'));\n      axios.post(`${API_URL}/favourites/${this.state.user_id}/${art_work_id_for_user_post}`) //.delete(`${API_URL}/favourites/${this.state.user_id}/remove/${data}`)\n      .then(response => {}).catch(error => {\n        console.log('error:', error.response.data);\n      });\n      window.location.reload();\n    };\n\n    this.placeArtWorkOnMap = (e, data) => {\n      console.log('Clicked placeArtWorkOnMap -->', data); // artWork registry_id\n\n      this.setState(state => {\n        return {\n          mapLink: state.data\n        };\n      }); // console.log(this.state.art_work.registry_id)\n\n      localStorage.setItem('currently viewing', data);\n    };\n  }\n\n  componentDidMount() {\n    this.getUserFavourites(); // this.removeDuplicatsOK()\n  }\n\n  componentDidUpdate() {// this.removeDuplicatsOK()\n  }\n\n  getUserFavourites() {\n    axios.get(`${API_URL}/favourites/${this.state.user_id}`).then(response => {\n      // remove duplicates\n      const arr = response.data;\n      const SymbolArray = [];\n      arr.forEach((item, index) => {\n        const {\n          art_work_id,\n          art_works\n        } = item;\n        let keyStr = `${art_work_id}_${art_works}`;\n        SymbolArray.push(Symbol.for(keyStr));\n      });\n      const result = [];\n      SymbolArray.forEach((item, index) => {\n        if (SymbolArray.indexOf(item) === index) {\n          result.push(arr[index]);\n        }\n      }); // console.log('filtered array w/o duplicates', result)\n\n      this.setState({\n        userFavourites: result\n      });\n    }).catch(error => {\n      console.log('error:', error.response.data);\n    });\n  }\n\n  render() {\n    console.log(`Hi, I'm the favourites for user --> `, this.state.user_id);\n    console.log(`User's favourties --> `, this.state.userFavourites);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"favourites\",\n        children: this.state.userFavourites.map((faves, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favourites__card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"favourites__card-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"favourites__card-top\",\n              children: [/*#__PURE__*/_jsxDEV(LazyLoad, {\n                className: \"favourites__media-lazyload\",\n                offsetVertical: 700,\n                overflow: true,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"favourites__media-img\",\n                  src: faves.art_works.photo_url_jpg,\n                  alt: faves.art_works.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"favourites__media-icon\",\n                src: heartRed,\n                alt: \"red heart icon\" // onClick={(e) => {this.removeFromFavourites(e, faves.art_works.registry_id)}}></img>  \n                ,\n                onClick: e => {\n                  this.removeFromFavourites(e, faves.art_work_id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"favourites__card-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"favourites__info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"favourites__title\",\n                  children: faves.art_works.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"favourites__artist\",\n                  children: [\"by \", faves.art_works.artists_names]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"favourites__links\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/map/${faves.art_works.registry_id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"favourites__links-button\",\n                    onClick: e => {\n                      this.placeArtWorkOnMap(e, faves.art_works.registry_id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"favourites__links-map-icon\",\n                      src: iconMap,\n                      alt: \"map icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/details/${faves.art_works.registry_id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"favourites__links-button\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"favourites__links-details-icon\",\n                      src: iconMaximize,\n                      alt: \"map icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BottomNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Saved;","map":{"version":3,"sources":["/Users/cristian/Dev/GitHub/CristianNic/ArtWalks/client/src/pages/Saved.jsx"],"names":["Component","Link","LazyLoad","axios","BottomNav","Search","API_URL","Saved","state","user_id","parseInt","localStorage","getItem","userFavourites","mapLink","removeFromFavourites","e","data","delete","then","response","catch","error","console","log","window","location","reload","addToFavourites","forEach","item","index","registry_id","position","setItem","art_work_id_for_user_post","post","placeArtWorkOnMap","setState","componentDidMount","getUserFavourites","componentDidUpdate","get","arr","SymbolArray","art_work_id","art_works","keyStr","push","Symbol","for","result","indexOf","render","map","faves","i","photo_url_jpg","title","heartRed","artists_names","iconMap","iconMaximize"],"mappings":"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","sourcesContent":["// import React from 'react';\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport LazyLoad from 'react-lazy-load';\nimport axios from 'axios';\nimport './Saved.scss'\nimport BottomNav from '../components/BottomNav/BottomNav';\nimport Search from '../components/Search/Search';\n// import ArtWorks from '../components/ArtWorks/ArtWorks'; \n// import SavedItems from '../components/SavedItems/SavedItems';\nimport { API_URL } from '../components/Utils/Utils'; \n\nimport heartRed from '../assets/icons/heart_red.svg';\nimport lightGray1Heart2Filled from '../assets/icons/heart-light-gray-1-2px-filled.svg';\n// import heartWhite from '../assets/icons/heart_white.svg';\nimport iconMap from '../assets/icons-feather-1.5px/map.svg';\n// import redHeart from '../assets/icons/heart_red.svg';\n// import whiteHeart2 from '../assets/icons/heart-white-2px.svg';\n// import lightGray1Heart2 from '../assets/icons/heart-light-gray-1-2px.svg';\n// import iconDetails from '../assets/icons-feather-1.5px/archive.svg'\nimport iconMaximize from '../assets/icons/maximize-2-1.5px.svg'\n\n\nclass Saved extends Component {\n\n  state = {\n    user_id: parseInt(localStorage.getItem('user_id')),\n    userFavourites: [],\n    mapLink: 0,\n  }\n\n  componentDidMount() {\n    this.getUserFavourites()\n    // this.removeDuplicatsOK()\n  }\n\n  componentDidUpdate() {\n    // this.removeDuplicatsOK()\n  }\n\n  getUserFavourites() {\n    axios\n      .get(`${API_URL}/favourites/${this.state.user_id}`)\n      .then((response) => {\n\n        // remove duplicates\n        const arr = response.data \n        const SymbolArray = [];\n        arr.forEach((item, index) => {\n          const { art_work_id, art_works } = item;\n          let keyStr = `${art_work_id}_${art_works}`;\n          SymbolArray.push(Symbol.for(keyStr));\n        });\n\n        const result = [];\n          SymbolArray.forEach((item, index) => {\n            if (SymbolArray.indexOf(item) === index) {\n              result.push(arr[index]);\n            }\n          });\n        // console.log('filtered array w/o duplicates', result)\n        this.setState({\n          userFavourites: result,\n        })\n      })\n      .catch((error) => {\n      console.log('error:', error.response.data);\n    })\n  }\n  \n  \n  removeFromFavourites = (e, data) => {\n    axios\n      .delete(`${API_URL}/favourites/${this.state.user_id}/remove/${data}`)\n      .then((response) => {\n      })\n      .catch((error) => {\n      console.log('error:', error.response.data);\n    })\n    window.location.reload()\n  }\n\n  addToFavourites = (e, data) => {\n\n    this.state.userFavourites.forEach(function (item, index) {\n      if (item.registry_id === data) {\n        const position = index + 1 \n        localStorage.setItem('art_work_id_for_user_post', position)\n      }\n    })\n\n    const art_work_id_for_user_post = parseInt(localStorage.getItem('art_work_id_for_user_post'))\n\n    axios\n      .post(`${API_URL}/favourites/${this.state.user_id}/${art_work_id_for_user_post}`)\n      //.delete(`${API_URL}/favourites/${this.state.user_id}/remove/${data}`)\n      .then((response) => {\n      })\n      .catch((error) => {\n      console.log('error:', error.response.data);\n    })\n    window.location.reload()\n  }\n\n\n  placeArtWorkOnMap = (e, data) => {\n    console.log('Clicked placeArtWorkOnMap -->', data) // artWork registry_id\n    this.setState(state => {\n      return {\n        mapLink: state.data,\n      }\n    });\n    // console.log(this.state.art_work.registry_id)\n    localStorage.setItem('currently viewing', data)\n  }\n\n  render() {\n\n    console.log(`Hi, I'm the favourites for user --> `, this.state.user_id)\n    console.log(`User's favourties --> `, this.state.userFavourites)\n \n    return (\n      <div>\n        <Search />\n        <section className=\"favourites\">\n\n          {this.state.userFavourites.map((faves, i) => (\n            <div className=\"favourites__card\" key={i}>\n              <div className=\"favourites__card-container\">\n\n                <div className=\"favourites__card-top\">\n                  <LazyLoad className=\"favourites__media-lazyload\" offsetVertical={700} overflow={true} >\n                    <img className=\"favourites__media-img\" src={faves.art_works.photo_url_jpg} alt={faves.art_works.title}></img>\n                  </LazyLoad>\n\n                  {/* // ----------- Working - once read heart removed page refreshes --------- //  */}\n                  <img className=\"favourites__media-icon\" src={heartRed} alt=\"red heart icon\"\n                    // onClick={(e) => {this.removeFromFavourites(e, faves.art_works.registry_id)}}></img>  \n                    onClick={(e) => {this.removeFromFavourites(e, faves.art_work_id)}}></img>  \n                    {/* onClick={(e) => {this.removeFromFavourites(e, i)}}></img>   */}\n                  \n                  {/* // ----------- Display gray heart to add back --------- //  */}\n                  {/* {this.state.userFavourites.map((fave) => fave.art_works).includes(faves.registry_id) === true ? (\n                    \n                    <img className=\"favourites__media-icon\" src={heartRed} alt=\"red heart icon, click to remove from favourites\"\n                      onClick={(e) => {this.removeFromFavourites(e, faves.registry_id)}}></img>\n                  ) : (\n                    // <img className=\"icon\" src={lightGray1Heart2} alt=\"white heart icon, click to add to favourites\"\n                    <img className=\"favourites__media-icon\" src={lightGray1Heart2Filled} alt=\"white heart icon, click to add to favourites\"\n                      onClick={(e) => { this.addToFavourites(e, faves.registry_id) }}></img>\n                  )} */}\n\n                </div>\n\n                <div className=\"favourites__card-bottom\">\n                  <div className=\"favourites__info\">\n                    <h1 className=\"favourites__title\">{faves.art_works.title}</h1>\n                    <h2 className=\"favourites__artist\">by {faves.art_works.artists_names}</h2>\n                  </div>\n\n                  {/* <div> */}\n                    <div className=\"favourites__links\">\n                      <Link to={`/map/${faves.art_works.registry_id}`}>\n                        <button className=\"favourites__links-button\"\n                          onClick={(e) => { this.placeArtWorkOnMap(e, faves.art_works.registry_id) }} >\n                            <img className=\"favourites__links-map-icon\" src={iconMap} alt=\"map icon\"></img>\n                        </button>\n                      </Link>\n                      {/* <Link to={`/details/${faves.art_works.registry_id}`}> */}\n                      <Link to={`/details/${faves.art_works.registry_id}`}>\n                        <button className=\"favourites__links-button\">\n                            {/* onClick={(e) => { this.placeArtWorkOnMap(e, faves.art_works.registry_id) }} > */}\n                              {/* <img className=\"favourites__links-details-icon\" src={iconDetails} alt=\"map icon\"></img> */}\n                              <img className=\"favourites__links-details-icon\" src={iconMaximize} alt=\"map icon\"></img>\n                        </button>\n                      </Link>\n                    </div>\n                  {/* </div> */}\n            \n                </div>\n              </div>\n            </div>\n          ))}\n        </section>\n        <BottomNav />\n      </div>\n    );\n  }\n}\n\nexport default Saved;"]},"metadata":{},"sourceType":"module"}